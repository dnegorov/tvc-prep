##########################################
#
# MAIN PARAMS 
#
# CHANGE BEFORE START
HOST_DISK_FOR_STORAGE="/dev/sdb"
HOST_NAME="vcore01"
HOST_NET_MANAGMENT_IF_NAME="enp4s0"
HOST_IP="192.168.184.12"
HOST_IP_GW="192.168.184.1"
#
# Recomended to change 
HOST_IP_MASK="24"
HOST_DNS="8.8.8.8"
# HOST ROOT PASSWORD (BY DEFAULT FOR OTHER SERVICES)
HOST_USER_PWD='P@$$w0rd'
# To generate AGENT_NODE_ID: uuidgen
AGENT_NODE_ID="b41b6ac7-cdca-4c63-a013-37ab0e6a5e79"
#
##########################################


##########################################
#
# FIXES AND WORK A ROUNDS
# Place functions to file fixes.sh
# Add fix to array:
# ["description"]=FunctionName
#
# WARNING !!!
# ORDER OF APPLAYING IS RANDOM!!!
# If some fixes must be applayed in fixed order, 
# remove it from this list and add it manualy to one of deploy scripts.
declare -A FIX_LIST=(
    ["fix_0_for_disable_gui"]=FixForDisableGUI
    ["fix_1_for_disable_selinux"]=FixForDisableSELinux
    ["fix_2_for_local_store"]=FixForLocalStorage
#    ["fix_3_for_network_in_grub"]=FixForNetworkInGrub  # не актуально с версии 1.3
#    ["fix_4_for_network_manager"]=FixForNetworkManager # не актуально с версии 1.3
#    ["fix_5_for_broker_ipv4"]=FixForBrokerServiceIPv4  # не актуально с версии 1.3
#    ["fix_6_for_managment_if"]=FixForManagmentIF       # не актуально с версии 1.2
    ["fix_7_for_multipath"]=FixForMultiPath             # актуально в версии 1.3
)
# Disable TVC GUI in SSH session
# Disable selinux
# Can not create storage on local disk
# Change IF names from eth0 to enp4s0 format
# Disable auto creation for IF "Wired..."
# Force use ipv4 for java in broker service
# Create network managment interface ["fix_6_for_managment_if"]=FixForManagmentIF
#
##########################################


##########################################
#
# COMMON SETTINGS
#
# Directory for deploy logs and artefacts
DEPLOY_DIR="/root/vcore-deploy"
DEPLOY_LOG_DIR="$DEPLOY_DIR""/log"
# Configuration file for saving some useful parameters
COMMON_PARAMS_CONFIG_FILE="$DEPLOY_DIR""/vcore-deploy.config"
#
##########################################


##########################################
#
# HOST SETTINGS
#
HOST_USER="root"
#
# NFS SHARES PARAMS
NFS_SHARE_PARAM_FOR_EXPORT='*(async,wdelay,nohide,no_subtree_check,sec=sys,rw,insecure,no_root_squash,no_all_squash)'
#
##########################################


##########################################
#
# vCore inside names
#
# в версии 1.3 поменяли имена сервисов, юзера/группы, пути

#VCORE_SERVICE_USER="tvc"
VCORE_BASE_NAME="vcore"
VCORE_SERVICE_USER="$VCORE_BASE_NAME"
VCORE_SERVICE_GROUP="$VCORE_SERVICE_USER"
VCORE_SERVICE_AGENT="vcore-agent"
VCORE_SERVICE_BROKER="vcore-broker"
VCORE_SERVICE_CONTROL="vcore-control"
VCORE_SERVICE_BALANCER="vcore-balancer"

##########################################
#
# MANAGMENT SYSTEM
#
SU_USER_NAME="admin"
# MANAGMENT ADMIN PASSWORD (default as HOST_USER_PWD)
SU_USER_PWD="$HOST_USER_PWD"
SU_IP=$HOST_IP
SU_PORT=8082
SU_LAST_NAME="Admin"
SU_FIRST_NAME="Adminov"
SU_PATRONYMIC="Adminovich"
SU_USER_EMAIL="support@skala-r.ru"
#
#
REALM="master"
# LOCAL DC ("true" or "false")
USE_LOCAL_DC="true"
DC_NAME="SKALA-DC-LOCAL"
DC_CLUSTER_NAME="SKALA-CLUSTER-LOCAL"
#
STOR_HDD_NAME="HDD-Storage"
STOR_ISO_NAME="ISO-Storage"
STOR_SRV_IP=$HOST_IP
STOR_PATH="/storage"
STOR_DIR_HDD="hdd"
STOR_DIR_ISO="iso"
STOR_PATH_HDD="$STOR_PATH"/"$STOR_DIR_HDD"
STOR_PATH_ISO="$STOR_PATH"/"$STOR_DIR_ISO"
#
SU_NET_INTERCONNECT_NAME="INTERCONNECT"
SU_NET_INTERCONNECT_MTU="9000"
# vlanID can be integer or null
SU_NET_INTERCONNECT_VLAN=null
# SU_NET_INTERCONNECT_VLAN=4000
#
PROPORSAL_NET_NAME="SKALA-NETWORKS"
#
PROPORSAL_COMPUTE_NAME="SKALA-COMPUTE"
PROPORSAL_COMPUTE_CPU_CORES_MAX=90
PROPORSAL_COMPUTE_CPU_SPEED_MAX=10000
PROPORSAL_COMPUTE_RAM_MAX=512000
PROPORSAL_COMPUTE_VRAM_MAX=128
#
PROPORSAL_STOR_NAME="SKALA-STORAGES"
PROPORSAL_STOR_HDD_SIZE=3000000
PROPORSAL_STOR_ISO_SIZE=500000
#
VIRTUAL_DC_NAME="SKALA-VIRTUAL-DC"
#
PROJECT_NAME="SKALA-PROJECT"
#
# INTERNAL TVC SERVICES PASSWORD (default as HOST_USER_PWD)
tvc_password="$HOST_USER_PWD"
tvc_password_hash=$(echo "$HOST_USER_PWD" | openssl base64 -a)
#
##########################################


##########################################
#
# CONFIGS FOR TVC SERVICES
#
# CONFIG FOR BROKER SERVICE
BROKER_CONFIG_FILE="/opt/""$VCORE_BASE_NAME""/broker/config/application.properties"
declare -A broker_config=(
    ["quarkus.http.host"]=$HOST_IP
    ["provider.storage.bind-address"]=$HOST_IP
    ["provider.storage.jdbc-address"]=$HOST_IP
    ["provider.transport.bind-address"]=$HOST_IP
    ["provider.storage.use-multicast-discovery"]="false"
    ["provider.storage.static-discovery-addresses"]=$HOST_IP":47500..47510"
    ["provider.transport.use-multicast-discovery"]="false"
    ["provider.transport.static-discovery-addresses"]="tcp://"$HOST_IP":61617"
    ["provider.transport.cluster.user"]="user"
    ["provider.transport.cluster.password"]=$tvc_password_hash
    ["provider.transport.user"]="user"
    ["provider.transport.password"]=$tvc_password_hash
)
#
#
# CONFIG FOR CONTROL SERVICE
CONTROL_CONFIG_FILE="/opt/""$VCORE_BASE_NAME""/control/config/application.properties"
declare -A control_config=(
    ["quarkus.http.host"]=$HOST_IP
    ["quarkus.datasource.jdbc.url"]="jdbc:ignite:thin://"$HOST_IP"?distributedJoins=true"
    ["broker-rest-api/mp-rest/url"]="http://"$HOST_IP":8081/api"
    ["quarkus.artemis.url"]="tcp://"$HOST_IP":61616?clientFailureCheckPeriod=5000&retryInterval=1000&reconnectAttempts=5"
    ["quarkus.artemis.username"]="user"
    ["quarkus.artemis.password"]=$tvc_password_hash
)
#
#
# CONFIG FOR AGENT SERVICE
AGENT_CONFIG_FILE="/opt/""$VCORE_BASE_NAME""/agent/config/application.properties"
declare -A agent_config=(
    ["quarkus.http.host"]=$HOST_IP
    ["quarkus.artemis.url"]="tcp://"$HOST_IP":61616?clientFailureCheckPeriod=5000&retryInterval=1000&reconnectAttempts=5"
    ["quarkus.artemis.username"]="user"
    ["quarkus.artemis.password"]=$tvc_password_hash
    ["agent.node-id"]=$AGENT_NODE_ID
)
#
#
# CONFIG FOR SANLOCK SERVICE
SANLOCK_CONFIG_FILE="/etc/sysconfig/sanlock"
# Always equal to agent.node-id from agent_config
declare -A sanlock_config=(
    ["AGENT_ID"]="${agent_config["agent.node-id"]}"
)
#
##########################################


##########################################
#
# NETWORK CONFIG FOR MANAGMENT INTERFACE
#
IF_MANAGMENT_CONFIG='[connection]
id='$HOST_NET_MANAGMENT_IF_NAME'
type=ethernet
interface-name='$HOST_NET_MANAGMENT_IF_NAME'
permissions=

[ethernet]
mac-address-blacklist=

[ipv4]
address1='$HOST_IP'/'$HOST_IP_MASK','$HOST_IP_GW'
dns='$HOST_DNS';
dns-search=
method=manual

[ipv6]
addr-gen-mode=stable-privacy
dns-search=
method=ignore

[proxy]

'


##########################################
#
# PREPARE DEPLOY ENVIRONMENT
#
# Create deploy dirs
mkdir -p {"$DEPLOY_DIR","$DEPLOY_LOG_DIR"}
#
# Create vcore-deploy.config
if [ ! -e "$COMMON_PARAMS_CONFIG_FILE" ] 
    then
        echo -e "# COMMON DEPLOY CONFIG
# created: $(date)
HOST_NAME=$HOST_NAME
HOST_NET_MANAGMENT_IF_NAME=$HOST_NET_MANAGMENT_IF_NAME
agent.node-id=$AGENT_NODE_ID
# GET dc-id in MANAGMENT WEB CONTROL before add host to cluster
agent.dc-id=
" > "$COMMON_PARAMS_CONFIG_FILE"
    fi

